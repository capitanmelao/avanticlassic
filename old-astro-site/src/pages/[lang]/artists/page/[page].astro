---
import BaseLayout from '../../../../layouts/BaseLayout.astro';
import type { Language } from '../../../../types';
import { artists } from '../../../../utils/data';
import { paginate } from '../../../../utils/data';

export function getStaticPaths() {
  const itemsPerPage = 6;
  const totalPages = Math.ceil(artists.length / itemsPerPage);
  
  const paths = [];
  for (let page = 1; page <= totalPages; page++) {
    for (const lang of ['en', 'fr', 'de']) {
      paths.push({
        params: { lang, page: page.toString() }
      });
    }
  }
  
  return paths;
}

const { lang, page } = Astro.params as { lang: Language; page: string };
const currentPage = parseInt(page);
const itemsPerPage = 6;

const paginatedArtists = paginate(artists, currentPage, itemsPerPage);
---

<BaseLayout lang={lang} selectedMenu="artists" title={`Our Artists - Page ${currentPage} - Avanticlassic`}>
  <div class="container mx-auto px-4">
    <h1 class="text-4xl font-bold mb-8 text-center">Our Artists</h1>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
      {paginatedArtists.items.map((artist) => (
        <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
          <a href={`/${lang}/artists/${artist.url}/`}>
            <img 
              src={`/images/artists/${artist.id}-800.jpeg`}
              alt={artist.name}
              class="w-full h-64 object-cover"
              loading="lazy"
            />
            <div class="p-6">
              <h2 class="text-xl font-semibold text-gray-900 mb-2">{artist.name}</h2>
              <p class="text-blue-600 hover:text-blue-800 font-medium">View Profile →</p>
            </div>
          </a>
        </div>
      ))}
    </div>

    <!-- Pagination -->
    <nav class="flex justify-center items-center space-x-4 mb-8">
      {paginatedArtists.hasPrev && (
        <a 
          href={paginatedArtists.currentPage === 2 
            ? `/${lang}/artists/` 
            : `/${lang}/artists/page/${paginatedArtists.currentPage - 1}/`
          }
          class="px-4 py-2 text-blue-600 hover:text-blue-800 border border-blue-600 rounded hover:bg-blue-50"
        >
          ← Previous
        </a>
      )}
      
      {Array.from({ length: paginatedArtists.totalPages }, (_, i) => i + 1).map((pageNum) => (
        <a 
          href={pageNum === 1 ? `/${lang}/artists/` : `/${lang}/artists/page/${pageNum}/`}
          class={`px-4 py-2 rounded ${
            pageNum === paginatedArtists.currentPage 
              ? 'bg-blue-600 text-white' 
              : 'text-blue-600 hover:text-blue-800 hover:bg-blue-50'
          }`}
        >
          {pageNum}
        </a>
      ))}
      
      {paginatedArtists.hasNext && (
        <a 
          href={`/${lang}/artists/page/${paginatedArtists.currentPage + 1}/`}
          class="px-4 py-2 text-blue-600 hover:text-blue-800 border border-blue-600 rounded hover:bg-blue-50"
        >
          Next →
        </a>
      )}
    </nav>
  </div>
</BaseLayout>